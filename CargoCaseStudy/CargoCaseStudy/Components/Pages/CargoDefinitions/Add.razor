@page "/CargoDefinitions/Add"
@inject NavigationManager Navigation
@rendermode InteractiveServer
<h3>Add Cargo Definitions</h3>
<EditForm Model="@newData" OnValidSubmit="HandleAdd" FormName="addForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Cargo</label>
        <InputText @bind-Value="@newData.Cargo" />
        <ValidationMessage For="() => newData.Cargo" />
    </div>

    <div>
        <label>Min Weight:</label>
        <InputNumber @bind-Value="@newData.MinWeight" step="any" />
        <ValidationMessage For="() => newData.MinWeight" />
    </div>

    <div>
        <label>Max Weight:</label>
        <InputNumber @bind-Value="@newData.MaxWeight" step="any" />
        <ValidationMessage For="() => newData.MaxWeight" />
    </div>

    <button type="submit">Add Data</button>
</EditForm>

@code {
    private CargoDefinitionViewModel newData = new CargoDefinitionViewModel();

    protected override void OnInitialized()
    {
        newData ??= new();

    }

    private async Task HandleAdd()
    {
        try
        {
            var createdData = new CargoDefinitionViewModel
            {
                Cargo = newData.Cargo,
                MinWeight = newData.MinWeight,
                MaxWeight = newData.MaxWeight
            };
            var serializedData = System.Text.Json.JsonSerializer.Serialize(createdData);
            var content = new StringContent(serializedData, System.Text.Encoding.UTF8, "application/json");
            var response = await Http.PostAsync("/api/cargo/create", content);
            Http.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));
            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Data added successfully.");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Failed to add data. Error: {error}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception occurred: {ex.Message}");
        }
    }
}